package View;



import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



/**
 * This class create the form Cruise.
 * @author yunfu
 * @version 1.0
 * @since 17/11/2014
 */
public class Cruises extends javax.swing.JFrame {

    /**
     * Creates new form Cruise
     */
    private void evaluationActionPerformed(ActionEvent e) {
        String[] name = {"CruiseID", "PassengerID", "food", "service", "environment", "drink", "internet", "entertainment", "MoneySpent"};
        String[][] data = new String[10000][9];//此处略去赋值操作
        DefaultTableModel defaultmodel = new DefaultTableModel(data, name);
        CruiseTable.setModel(defaultmodel);
        for(int i=0; i<CruiseTable.getRowCount(); i++){
            CruiseTable.setValueAt(null, i, 0);
            CruiseTable.setValueAt(null, i, 1);
            CruiseTable.setValueAt(null, i, 2);
        }
            for (int i = 0; i < SearchPage.db.getEvaluation().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getCruiseID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getPassengerID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getFood(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getService(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getEnvironment(), i, 4);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getDrink(), i, 5);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getInternet(), i, 6);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getEntertainment(), i, 7);
                CruiseTable.setValueAt(SearchPage.db.getEvaluation().get(i).getMoneySpent(), i, 8);
            }
        }


    public Cruises() {

        initComponents();

        this.setVisible(true);
    }
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Fu Yun
    private void initComponents() {
        jMenuBar1 = new JMenuBar();
        Query = new JMenu();
        Passengers = new JCheckBoxMenuItem();
        Cruises = new JCheckBoxMenuItem();
        jPanel1 = new JPanel();
        port4 = new JCheckBox();
        CruiseSearch = new JButton();
        port3 = new JCheckBox();
        jLabel1 = new JLabel();
        port1 = new JCheckBox();
        port2 = new JCheckBox();
        jScrollPane1 = new JScrollPane();
        CruiseTable = new JTable();
        evaluation = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Container contentPane = getContentPane();
        contentPane.setLayout(new GridBagLayout());

        //======== jMenuBar1 ========
        {

            //======== Query ========
            {
                Query.setText("Query");

                //---- Passengers ----
                Passengers.setSelected(true);
                Passengers.setText("Passengers");
                Passengers.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        PassengersActionPerformed(e);
                    }
                });
                Query.add(Passengers);

                //---- Cruises ----
                Cruises.setSelected(true);
                Cruises.setText("Cruises");
                Cruises.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        CruisesActionPerformed(e);
                    }
                });
                Query.add(Cruises);
            }
            jMenuBar1.add(Query);
        }
        setJMenuBar(jMenuBar1);

        //======== jPanel1 ========
        {

            // JFormDesigner evaluation mark
            jPanel1.setBorder(new javax.swing.border.CompoundBorder(
                new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
                    "JFormDesigner Evaluation", javax.swing.border.TitledBorder.CENTER,
                    javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    java.awt.Color.red), jPanel1.getBorder())); jPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener(){public void propertyChange(java.beans.PropertyChangeEvent e){if("border".equals(e.getPropertyName()))throw new RuntimeException();}});


            //---- port4 ----
            port4.setText("port 4");

            //---- CruiseSearch ----
            CruiseSearch.setText("Search");
            CruiseSearch.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    CruiseSearchActionPerformed(e);
                }
            });

            //---- port3 ----
            port3.setText("port 3");

            //---- jLabel1 ----
            jLabel1.setText("Find the ports of cruises");

            //---- port1 ----
            port1.setText("port 1");
            port1.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    port1ActionPerformed(e);
                }
            });

            //---- port2 ----
            port2.setText("port 2");

            //======== jScrollPane1 ========
            {

                //---- CruiseTable ----
                CruiseTable.setModel(new DefaultTableModel(
                    new Object[][] {
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                    },
                    new String[] {
                        "Cruise ID", "Ship ID", "Port 1", "Port 2", "Port 3", "Port 4"
                    }
                ));
                CruiseTable.setSurrendersFocusOnKeystroke(true);
                jScrollPane1.setViewportView(CruiseTable);
            }

            //---- evaluation ----
            evaluation.setText("Evaluation");
            evaluation.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    evaluationActionPerformed(e);
                }
            });

            GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(port1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(port2)
                        .addGap(18, 18, 18)
                        .addComponent(port3)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(port4)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CruiseSearch)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(evaluation)
                        .addContainerGap(54, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                        .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(port1)
                                .addComponent(port2)
                                .addComponent(port3)
                                .addComponent(port4))
                            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(evaluation)
                                .addComponent(CruiseSearch)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 260, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
            );
        }
        contentPane.add(jPanel1, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0,
            GridBagConstraints.NORTHWEST, GridBagConstraints.NONE,
            new Insets(6, 15, 17, 31), 9, 0));
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void PassengersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PassengersActionPerformed
        // TODO add your handling code here:
        SearchPage searchpage = new SearchPage();
    }//GEN-LAST:event_PassengersActionPerformed

    private void CruisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CruisesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CruisesActionPerformed



    private void port1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_port1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_port1ActionPerformed

    private void CruiseSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CruiseSearchActionPerformed
        // TODO add your handling code here:
        String[] name = {"Cruise ID","Ship ID","Port 1","Port 2", "Port 3", "Port 4"};
        String[][] data = new String[300][6];
        DefaultTableModel defaultmodel = new DefaultTableModel(data, name);
        CruiseTable.setModel(defaultmodel);
        for(int i=0; i<CruiseTable.getRowCount(); i++){
            CruiseTable.setValueAt(null, i, 0);
            CruiseTable.setValueAt(null, i, 1);
            CruiseTable.setValueAt(null, i, 2);
            CruiseTable.setValueAt(null, i, 3);
        }

        if(port1.isSelected()&&port2.isSelected()&&port3.isSelected()&&port4.isSelected()) {
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);
            }
        }else if(port1.isSelected()&&port2.isSelected()&&port3.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);

            }
        }else if(port1.isSelected()&&port3.isSelected()&&port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        }else if(port2.isSelected()&&port3.isSelected()&&port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        }else if(port1.isSelected()&&port2.isSelected()&&port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        }else if(port1.isSelected()&&port2.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);

            }
        }else if(port1.isSelected()&&port3.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);

            }
        }
        else if(port2.isSelected()&&port3.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);

            }
        } else if(port1.isSelected()&&port3.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);

            }
        } else if(port2.isSelected()&&port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        }else if(port1.isSelected()&&port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        }else if(port3.isSelected()&&port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        } else if(port1.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort1(), i, 2);

            }
        }else if(port2.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort2(), i, 3);

            }
        }else if(port3.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort3(), i, 4);

            }
        }else if(port4.isSelected()){
            for (int i = 0; i < SearchPage.db.getCruiseAll().size(); i++) {

                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getID(), i, 0);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getShipID(), i, 1);
                CruiseTable.setValueAt(SearchPage.db.getCruiseAll().get(i).getPort4(), i, 5);

            }
        }

    }//GEN-LAST:event_CruiseSearchActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Fu Yun
    private JMenuBar jMenuBar1;
    private JMenu Query;
    private JCheckBoxMenuItem Passengers;
    private JCheckBoxMenuItem Cruises;
    private JPanel jPanel1;
    private JCheckBox port4;
    private JButton CruiseSearch;
    private JCheckBox port3;
    private JLabel jLabel1;
    private JCheckBox port1;
    private JCheckBox port2;
    private JScrollPane jScrollPane1;
    private JTable CruiseTable;
    private JButton evaluation;
    // End of variables declaration//GEN-END:variables
}
